superclass=Object
type=class
library=openssl
extended=
included=

共通鍵暗号のために抽象化されたインターフェースを提供するクラスです。

基本的にこのクラスを直接使ってデータを暗号化することは
避けてください。通常はより高水準なインターフェースが利用可能な
はずです。必要なのは暗号アルゴリズムを指定するため 
[[m:OpenSSL::Cipher.new]] で暗号オブジェクトを生成することだけでしょう。

もし、このクラスを直接利用して暗号化する場合は、暗号の鍵や
IV(Initialization Vector)の取り扱いについて正しく理解してからに
してください。

以下の手順で利用します。
  * [[m:OpenSSL::Cipher.new]] や [[m:OpenSSL::Cipher::AES256.new]] 
    などで暗号オブジェクトを生成する
  * [[m:OpenSSL::Cipher#encrypt]], [[m:OpenSSL::Cipher#decrypt]] で
    暗号、復号のいずれをするかを設定する
  * [[m:OpenSSL::Cipher#key=]], [[m:OpenSSL::Cipher#iv=]], 
    [[m:OpenSSL::Cipher#random_key]], [[m:OpenSSL::Cipher#random_iv]] などで
    鍵と IV(initialization vector) を設定する
  * [[m:OpenSSL::Cipher#update]], [[m:OpenSSL::Cipher#final]] で
    暗号化/復号化をする


ruby 1.8.3 から Cast5 と Idea が CAST5 と IDEA に改名されました。

=== ブロック暗号モード
AES のようなブロック暗号では暗号方式を選択する際に
モードを指定する必要があります。このライブラリでは
以下のような文字列でモードを指定できます。
  * "CBC"
  * "CFB"
  * "ECB"
  * "OFB"
これらの文字列の意味は
[[ref:lib:openssl#references]] などで調べてください。
AES を用いる場合、通常は CBC を用いれば良いでしょう。
選択肢によっては安全性に問題があるので気をつけてください。


=== 使用例
  require 'openssl'
  
  p a123 = "0123456789"
  pass = "hogehoge"
  enc = OpenSSL::Cipher::DES.new
  enc.encrypt
  enc.pkcs5_keyivgen(pass)
  p a = enc.update(a123)
  p b = enc.final
  s = a + b
  
  dec = OpenSSL::Cipher::DES.new
  dec.decrypt
  dec.pkcs5_keyivgen(pass)
  p a = dec.update(s)
  p b = dec.final
  p a + b #=> "0123456789"
